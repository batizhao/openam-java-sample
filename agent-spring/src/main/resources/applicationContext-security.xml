<?xml version="1.0" encoding="ISO-8859-1"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security-3.0.xsd">


    <!-- Allows us to access parameters in AMConfig.properties  -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:AMConfig.properties"/>
    </bean>

    <bean id="filterChainProxy"
          class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <security:filter-chain pattern="/**"
                                   filters="
                                   httpSessionContextIntegrationFilter,
                                   logoutFilter,
                                   openssoFilter,
                                   anonymousAuthFilter,
                                   exceptionTranslationFilter,
                                   filterInvocationInterceptor"/>
        </security:filter-chain-map>
    </bean>
    <alias name="filterChainProxy" alias="springSecurityFilterChain"/>

    <bean id="authenticationEntryPoint"
          class="com.sun.identity.provider.springsecurity.OpenSSOProcessingFilterEntryPoint">
        <property name="loginUrl" value="${com.sun.identity.loginurl}"/>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
    </bean>

    <bean id="httpSessionContextIntegrationFilter"
          class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <property name="forceEagerSessionCreation" value="true"/>
    </bean>

    <bean id="filterInvocationInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="securityMetadataSource">
            <bean class="com.sun.identity.provider.springsecurity.OpenSSOObjectDefinitionSource">
                <property name="anonymousUrls">
                    <list>
                        <value>/denied*</value>
                        <value>/index.html</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="authenticationManager"
          class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <bean class="com.sun.identity.provider.springsecurity.OpenSSOAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean name="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <bean class="com.sun.identity.provider.springsecurity.OpenSSOVoter"/>
            </list>
        </property>
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>

    <bean id="openssoFilter" class="com.sun.identity.provider.springsecurity.OpenSSOProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>

        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/loginfailure.jsp"/>
            </bean>
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <property name="defaultTargetUrl" value="/"/>
            </bean>
        </property>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
    </bean>

    <bean id="anonymousAuthFilter"
          class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <property name="key" value="foobar"/>
        <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
    </bean>

    <bean id="anonymousAuthenticationProvider"
          class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="foobar"/>
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/deniedAccess.jsp"/>
            </bean>
        </property>
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="${com.sun.identity.loginurl}"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
                    <property name="invalidateHttpSession" value="true"/>
                </bean>
                <bean id="openSsoLogoutHandler" class="com.sun.identity.provider.springsecurity.OpenSSOLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/j_spring_security_logout"/>
    </bean>

</beans>
